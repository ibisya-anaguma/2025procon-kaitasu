---
  name: run-autocart
  on:
    workflow_dispatch: {}
  
  permissions:
    contents: write
  
  jobs:
    run-autocart:
      runs-on: ubuntu-latest
      timeout-minutes: 60
  
      env:
        # ここはデフォルト。必要なら上書きして下さい。
        AUTOCART_LIMIT: "50"
  
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        - name: Prepare Firebase key dir
          shell: bash
          run: |
            set -euo pipefail
            mkdir -p .firebase
  
        - name: Write FIREBASE_SERVICE_ACCOUNT secret to file
          shell: bash
          run: |
            set -euo pipefail
  
            # quick existence check
            if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" ]; then
              echo "::error::FIREBASE_SERVICE_ACCOUNT is not set."
              exit 2
            fi
  
            # write secret into a tmp file (safe for yaml lint)
            cat > .firebase/_sa_secret <<'SECRET'
            ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
            SECRET
  
            # normalize/validate secret with Python and write final file
            python3 - <<'PY' > .firebase/firebase-key.json
            import sys, json
            s = open('.firebase/_sa_secret', 'r', encoding='utf-8').read()
            
            def is_json(x):
              try:
                json.loads(x)
                return True
              except Exception:
                return False
            
            out = None
            if is_json(s):
              out = s
            elif is_json(s.replace("\\n", "\n")):
              out = s.replace("\\n", "\n")
            elif is_json(s.replace("\\\\n", "\n")):
              out = s.replace("\\\\n", "\n")
            else:
              sys.stderr.write("ERROR: FIREBASE_SERVICE_ACCOUNT secret is not valid JSON\n")
              sys.exit(3)
            
            sys.stdout.write(out)
            PY
            
                      # sanity checks
                      TARGET=".firebase/firebase-key.json"
                      if [ ! -s "$TARGET" ]; then
                        echo "::error::Wrote firebase key but it's empty or missing ($TARGET)"
                        exit 4
                      fi
            
                      chmod 600 "$TARGET" || true
                      size=$(wc -c < "$TARGET" || echo 0)
                      echo "Wrote and validated $TARGET (size=${size} bytes)"
                      rm -f .firebase/_sa_secret || true
            
                  - name: Show runtime info
                    shell: bash
                    run: |
                      set -euo pipefail
                      echo "workspace: $GITHUB_WORKSPACE"
                      echo "AUTOCART_LIMIT: ${AUTOCART_LIMIT}"
                      echo "GOOGLE_APPLICATION_CREDENTIALS will be set to:"
                      echo "  ${GITHUB_WORKSPACE}/.firebase/firebase-key.json"
            
                  - name: Run autocart-runner (LIVE)
                    id: run_autocart
                    shell: bash
                    env:
                      GOOGLE_APPLICATION_CREDENTIALS:
                        "${{ github.workspace }}/.firebase/firebase-key.json"
                      AUTOCART_LIMIT: "${{ env.AUTOCART_LIMIT }}"
                    run: |
                      set -euo pipefail
            
                      cd "$GITHUB_WORKSPACE"
            
                      echo "Using GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}"
                      echo "AUTOCART_LIMIT=${AUTOCART_LIMIT}"
                      echo "Running autocart-runner (LIVE unless you pass --dry)."
            
                      # If your project needs node deps under src/jobs/checkout, uncomment:
                      # cd src/jobs/checkout
                      # npm ci
            
                      # run the TS runner using tsx (it compiles & runs)
                      npx tsx src/jobs/checkout/autocart-runner.ts \
                        --cred "${GOOGLE_APPLICATION_CREDENTIALS}" \
                        --limit "${AUTOCART_LIMIT}" \
                        --debug
            
                  - name: Upload logs (always)
                    if: always()
                    uses: actions/upload-artifact@v4
                    with:
                      name: autocart-logs
                      path: |
                        src/jobs/checkout/logs/*.log
                        src/jobs/checkout/*.log
            
                  - name: Cleanup firebase key (always)
                    if: always()
                    shell: bash
                    run: |
                      set -euo pipefail
                      if command -v shred >/dev/null 2>&1; then
                        shred -u .firebase/firebase-key.json || true
                      else
                        rm -f .firebase/firebase-key.json || true
                      fi
                      echo "cleaned firebase key"